link="https://raw.githubusercontent.com/Group8-GovAnalyticsProject/Merging/main/final_merged_data.csv"
#Read the csv file from merging and name it "final".
final=read.csv(link)
row.names(final)=NULL
#Pick the variables we need for clustering, name it "dfClus".
dfClus=final[,c("all_positive","median_hhold_inc","median_age","count_19","count_20")]
summary(dfClus)
dfClus=scale(dfClus)
summary(dfClus)
#Rename the subset indexes as tract number.
row.names(dfClus)=final$tract_id
head(dfClus)
set.seed(9999)
#Load the cluster package.
library(cluster)
#Compute all the distances between observations in the data set.
dfClus_D=cluster::daisy(x=dfClus)
#Indicate the amount of clusters we want, which is 5 here, and apply the cluster function.
NumCluster=5
res.pam = pam(x=dfClus_D,
k = NumCluster,
cluster.only = F)
#Add results to original data frame, "final".
final$pam=as.factor(res.pam$clustering)
#Example: Query data frame cluster 2.
final[final$pam==2,'tract_id']
#Show the table of clusters and see how many observations in each cluster.
table(final$pam)
#Load the factoextra package.
library(factoextra)
#Display the cluster silhouette plot and the average silhouette width.
fviz_silhouette(res.pam)
#Save individual silhouettes.
pamEval=data.frame(res.pam$silinfo$widths)
head(pamEval)
#Examine anomalies.
#Request negative silhouettes: the ones that are poorly clustered.
#We can tell there are 146 observations that are poorly clustered.
pamEval[pamEval$sil_width<0,]
library(factoextra)
#Apply the hierarchical agglomerative clustering function.
res.agnes= hcut(dfClus_D,
k = NumCluster,isdiss=T,
hc_func='agnes',
hc_method = "ward.D2")
#Add results to original data frame, "final".
final$agn=as.factor(res.agnes$cluster)
#Example 1: query data frame cluster 3.
final[final$agn==3,'tract_id']
#Example 2: Query data whose tract number is 53005010809.
final[final$tract_id==53005010809,'agn']
#Show the table of clusters and see how many observations in each cluster.
table(final$agn)
#Evaluate the results.
#Display the cluster dendrogram.
fviz_dend(res.agnes,k=NumCluster, cex = 0.7, horiz = T)
#Evaluate the results.
#Or display the cluster silhouette plot and the average silhouette width of the clustering results.
fviz_silhouette(res.agnes)
#Save the silhouettes.
agnEval=data.frame(res.agnes$silinfo$widths)
head(agnEval)
#Examine anomalies.
#Request the negative silhouettes.
agnEval[agnEval$sil_width<0,]
#Load the factoextra package.
library(factoextra)
#Apply the hierarchical divisive clustering function.
res.diana= hcut(dfClus_D, k = NumCluster,
hc_func='diana',
hc_method = "ward.D")
#Add results to the original data frame.
final$dia=as.factor(res.diana$cluster)
#Report the table of clusters and see how many observations in each cluster.
table(final$dia)
#Evaluate the results.
#Display the cluster dendrogram.
fviz_dend(res.diana,k=NumCluster, cex = 0.7, horiz = T)
#Evaluate the results.
#Or display the cluster silhouette plot and the average silhouette width of the clustering results.
library(factoextra)
fviz_silhouette(res.diana)
#Save the silhouettes.
diaEval=data.frame(res.diana$silinfo$widths)
head(diaEval)
#Examine anomalies.
#Request the negative silhouettes.
diaEval[diaEval$sil_width<0,]
